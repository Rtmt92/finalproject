name: CD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: üöÄ D√©ploiement
    runs-on: ubuntu-latest

    steps:
      # 1) R√©cup√®re votre code
      - name: Checkout du d√©p√¥t
        uses: actions/checkout@v4

      # 2) Installe PHP & Composer, puis les d√©pendances backend
      - name: Setup PHP & Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      - name: Installer les d√©pendances backend
        run: |
          cd backend
          composer install --no-dev --optimize-autoloader

      # 3) Installe Node.js, puis build du frontend
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Installer & builder le frontend
        env:
          CI: false     # <--- Important : d√©sactive l‚Äô√©chec sur warnings ESLint
        run: |
          cd frontend
          npm ci
          npm run build

      # 4) D√©ploiement SSH vers votre serveur
      - name: D√©ployer sur le serveur
        uses: appleboy/ssh-action@v0.1.12
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # stoppe Apache s‚Äôil tourne d√©j√†
            sudo systemctl stop apache2 || true

            # synchronise le backend
            rsync -av --delete backend/ $REMOTE_APP_PATH/backend/

            # synchronise le build React
            rsync -av --delete frontend/build/ $REMOTE_APP_PATH/frontend/

            # ajuste les droits et red√©marre Apache
            sudo chown -R www-data:www-data $REMOTE_APP_PATH
            sudo systemctl start apache2
